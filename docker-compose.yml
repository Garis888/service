version: "3.9"

services:
  web_a:
    container_name: "web_a"
    build:
      context: .
      dockerfile: "DockerfileA"
    env_file:
      - .env
    command: uvicorn mainA:app --reload --workers 1 --host 0.0.0.0 --port 8000
    restart: unless-stopped
    ports:
      - 8082:8000
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy


  web_b:
    container_name: "web_b"
    build:
      context: .
      dockerfile: "DockerfileB"
    env_file:
      - .env
    command: uvicorn mainB:app --reload --workers 1 --host 0.0.0.0 --port 8001
    restart: unless-stopped
    ports:
      - 8083:8001
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  script:
    container_name: "script"
    build:
      context: .
      dockerfile: "DockerfileS"
    env_file:
      - .env
    command: python mainS.py
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      web_a:
        condition: service_started

  rabbitmq:
    image: rabbitmq:3.10.7-management
    ports:
      - '5672:5672'
      - '15672:15672'
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - 'redis_data:/bitnami/redis/data'
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5

volumes:
  redis_data:
    driver: local
